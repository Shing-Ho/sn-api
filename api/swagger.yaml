openapi: 3.0.0

servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: BOG Production
    url: https://bog.simplenight.com/api/v1/
  - description: Simplenight Live Sandbox
    url: https://simplenight-api-278418.ue.r.appspot.com/api/v1/
  - description: Localhost
    url: http://localhost:8000/api/v1
info:
  version: "1.0.2"
  title: Simplenight Hotel API
  description: |
    This OpenAPI Specification describes the Simplenight Hotel API.  In the dropdown below, there are a list of two servers to choose from.  The first is a simple automock server which returns static mock responses.  The second is the Simplenight Live Sandbox server, which returns real data.

    Using the Simplenight Live Sandbox server requires a Bearer token.  This key must be provided by Simplenight.  Once you have obtained a token, you can click the "Authorize" button below, and submit your token.
tags:
  - name: Locations
    description: Location-related data (cities, regions, airports, etc).  Each of these endpoints takes country code and language code as query parameters.
  - name: Hotel
    description: Hotel availabilty, hotel details, and hotel booking endpoints

security:
  - ApiKeyAuth: []
paths:
  /api/v1/locations/cities:
    get:
      operationId: findAllLocationsViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/locations/id:
    get:
      operationId: findByIdLocationsViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/locations/prefix:
    get:
      operationId: findByPrefixLocationsViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/properties:
    get:
      operationId: propertiesHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/reconciliation:
    get:
      operationId: reconciliationHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/reviews:
    get:
      operationId: reviewsHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/search-by-id:
    get:
      operationId: searchByIdHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: searchByIdHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/search-by-id:
    get:
      operationId: searchByIdGoogleHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: searchByIdGoogleHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/search-by-location:
    get:
      operationId: searchByLocationHotelViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: searchByLocationHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/status:
    get:
      operationId: statusHotelViewSet
      description: Simply sets a variable in LocMem request cache, and retrieves it,
        to ensure things are working
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/charging/address:
    get:
      operationId: getAddressChargingViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/charging/poi:
    get:
      operationId: getPoiChargingViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/charging/reference_data:
    get:
      operationId: getReferenceChargingViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/users:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/users/{id}:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/payment-methods:
    get:
      operationId: listPaymentMethods
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
          description: ''
      tags:
      - api
    post:
      operationId: createPaymentMethod
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
      tags:
      - api
  /api/v1/payment-methods/{id}:
    get:
      operationId: retrievePaymentMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this PaymentMethod.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
      tags:
      - api
    put:
      operationId: updatePaymentMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this PaymentMethod.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPaymentMethod
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this PaymentMethod.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/accounts/user:
    get:
      operationId: retrieveUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/venues/:
    get:
      operationId: listVenues
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Venue'
          description: ''
      tags:
      - api
    post:
      operationId: createVenue
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
      tags:
      - api
  /api/v1/venues/{venue_id}/:
    get:
      operationId: retrieveVenue
      description: ''
      parameters:
      - name: venue_id
        in: path
        required: true
        description: A UUID string identifying this Venue.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenue
      description: ''
      parameters:
      - name: venue_id
        in: path
        required: true
        description: A UUID string identifying this Venue.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenue
      description: ''
      parameters:
      - name: venue_id
        in: path
        required: true
        description: A UUID string identifying this Venue.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/media/:
    get:
      operationId: listVenueMedias
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VenueMedia'
          description: ''
      tags:
      - api
    post:
      operationId: createVenueMedia
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueMedia'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueMedia'
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/media/{id}/:
    get:
      operationId: retrieveVenueMedia
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueMedia.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueMedia'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenueMedia
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueMedia.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueMedia'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueMedia'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenueMedia
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueMedia.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/contact/:
    get:
      operationId: listVenueContacts
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VenueContact'
          description: ''
      tags:
      - api
    post:
      operationId: createVenueContact
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueContact'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueContact'
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/contact/{id}/:
    get:
      operationId: retrieveVenueContact
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueContact.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueContact'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenueContact
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueContact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueContact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueContact'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenueContact
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueContact.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/details/:
    get:
      operationId: listVenueDetails
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VenueDetail'
          description: ''
      tags:
      - api
    post:
      operationId: createVenueDetail
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueDetail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueDetail'
          description: ''
      tags:
      - api
  /api/v1/venues/{parent_lookup_venue_id}/details/{id}/:
    get:
      operationId: retrieveVenueDetail
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueDetail.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenueDetail
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueDetail.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueDetail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueDetail'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenueDetail
      description: ''
      parameters:
      - name: parent_lookup_venue_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A UUID string identifying this VenueDetail.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/hotels/booking:
    post:
      operationId: bookingHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/booking:
    post:
      operationId: bookingGoogleHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/cancel-confirm:
    post:
      operationId: cancelConfirmHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/cancel:
    post:
      operationId: cancelLookupHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/pricing:
    post:
      operationId: googleLivePricingHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/google/properties/hotel-codes:
    post:
      operationId: propertiesHotelCodesHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/hotels/search-by-id-batch:
    post:
      operationId: searchByIdBatchHotelViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/search/details:
    post:
      operationId: detailsAllProductsViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/search/search:
    post:
      operationId: searchAllProductsViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/charging/comment:
    post:
      operationId: postCommentChargingViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/book-reservation:
    post:
      operationId: getAddReservationCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/cancel-reservation:
    post:
      operationId: getCancelReservationCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/find-reservation:
    post:
      operationId: getFindReservationCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/modify-reservation:
    post:
      operationId: getModifyReservationCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/rate-inqury:
    post:
      operationId: getRateInquiryCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/carey/search-reservation:
    post:
      operationId: searchReservationCareyViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/authentication/create_api_key:
    post:
      operationId: createApiKeyAuthentication
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/accounts/register:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/v1/accounts/login:
    post:
      operationId: createLoginAPI
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/accounts/logout:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/accounts/logoutall:
    post:
      operationId: createLogoutAll
      description: 'Log the user out of all sessions

        I.E. deletes all auth tokens for the user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/accounts/change-password:
    put:
      operationId: updateChangePassword
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateChangePassword
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - username
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
        icon:
          type: string
          nullable: true
        api_key:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    Venue:
      type: object
      properties:
        venue_id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 300
        venue_from:
          enum:
          - SN
          - PO
          type: string
        type:
          enum:
          - NIGHT_LIFE
          - HOTELS
          - CAR_SERVICE
          - GAS_AND_CHARGING
          - TOLLS
          - SHOPPINGS
          - THINGS_TO_DO
          - DINING
          - FAST_FOOD
          - COFFEE_AND_TEA
          type: string
        language_code:
          type: string
          maxLength: 3
        tags:
          type: string
          nullable: true
          maxLength: 100
        status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
      required:
      - name
    VenueMedia:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          enum:
          - VIDEO
          - IMAGE
          type: string
          nullable: true
        url:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        venue_id:
          type: string
      required:
      - url
      - venue_id
    VenueContact:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          enum:
          - MAIN
          - OTHER
          type: string
        website:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        venue_id:
          type: string
      required:
      - venue_id
    VenueDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        logitude:
          type: string
          nullable: true
          maxLength: 10
        latitude:
          type: string
          nullable: true
          maxLength: 200
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        availability:
          type: string
        holidays:
          type: string
        amenities:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        payment_method:
          type: string
          nullable: true
        venue_id:
          type: string
      required:
      - venue_id
    Register:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
      required:
      - username
      - email
      - password
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - old_password
      - new_password
